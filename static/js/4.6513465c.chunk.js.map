{"version":3,"file":"static/js/4.6513465c.chunk.js","mappings":"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","sources":["components/MovieCard/MovieCard.styled.js","components/MovieCard/MovieCard.js","components/TrendingMoviesList/TrendingMoviesList.styled.js","components/TrendingMoviesList/TrendingMoviesList.js","pages/Home/Home.styled.js","pages/Home/Home.js","services/fetchMovies.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const MovieItem = styled(NavLink)`\n  border-radius: ${p => p.theme.radii.large};\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  overflow: hidden;\n  box-shadow: ${p => p.theme.shadows.middle};\n  &:hover {\n    transform: scale(1.02);\n  }\n`;\n\nexport const MovieItemImage = styled.img`\n  width: 100%;\n  object-fit: cover;\n`;\n\nexport const MovieItemTitle = styled.div`\n  padding: ${p => p.theme.space[3]}px;\n  font-size: ${p => p.theme.fontSizes.l};\n  color: ${p => p.theme.colors.secondaryText};\n`;\n","import PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\nimport { BsImage } from 'react-icons/bs';\nimport { MovieItem, MovieItemImage, MovieItemTitle } from './MovieCard.styled';\n\nconst MovieCard = ({ movie: { id, original_title, poster_path } }) => {\n  const location = useLocation();\n  const currentLocation = '/movies';\n\n  return (\n    <MovieItem to={`${currentLocation}/${id}`} state={{ from: location }}>\n      {poster_path ? (\n        <MovieItemImage\n          src={`https://www.themoviedb.org/t/p/w300${poster_path}`}\n          alt={original_title}\n        />\n      ) : (\n        <BsImage size={200} color=\"#6b6969\" />\n      )}\n      <MovieItemTitle> {original_title}</MovieItemTitle>\n    </MovieItem>\n  );\n};\n\nMovieCard.propTypes = {\n  movie: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    original_title: PropTypes.string.isRequired,\n    poster_path: PropTypes.string,\n  }),\n};\n\nexport default MovieCard;\n","import styled from '@emotion/styled';\n\nexport const TrendingList = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n  grid-gap: ${p => p.theme.space[4]}px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\n","import React, { useState, useEffect } from 'react';\nimport { fetchTrendingMovies } from '../../services/fetchMovies';\nimport MovieCard from 'components/MovieCard';\nimport { TrendingList } from './TrendingMoviesList.styled';\n\nconst TrendingMoviesList = () => {\n  const [trendingMovies, setTrendingMovies] = useState([]);\n\n  useEffect(() => {\n    async function fetch() {\n      try {\n        const movies = await fetchTrendingMovies();\n        setTrendingMovies(movies);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    fetch();\n  }, []);\n\n  if (!trendingMovies) {\n    return null;\n  }\n\n  return (\n    <TrendingList>\n      {trendingMovies.map(movie => (\n        <MovieCard key={movie.id} movie={movie} />\n      ))}\n    </TrendingList>\n  );\n};\n\nexport default TrendingMoviesList;\n","import styled from '@emotion/styled';\n\nexport const Title = styled.h1`\n  padding: ${p => p.theme.space[4]}px;\n  color: ${p => p.theme.colors.secondaryText};\n  text-align: center;\n  font-size: ${p => p.theme.fontSizes.xxl};\n`;\n","import React from 'react';\nimport TrendingMoviesList from 'components/TrendingMoviesList';\nimport { Title } from './Home.styled';\n\nconst Home = () => {\n  return (\n    <main>\n      <Title>Trending today</Title>\n      <TrendingMoviesList />\n    </main>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '76ca17943e227c67de15be6c6d3599fa';\n\nexport async function fetchTrendingMovies() {\n  const response = await axios(`/trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results;\n}\n\nexport async function fetchSearchMovies(query) {\n  const response = await axios(\n    `/search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  return response.data.results;\n}\n\nexport async function fetchMovieDetails(movieId) {\n  const response = await axios(`/movie/${movieId}?api_key=${API_KEY}`);\n  return response.data;\n}\n\nexport async function fetchCast(movieId) {\n  const response = await axios(`/movie/${movieId}/credits?api_key=${API_KEY}`);\n  return response.data.cast;\n}\n\nexport async function fetchReviews(movieId) {\n  const response = await axios(`/movie/${movieId}/reviews?api_key=${API_KEY}`);\n  return response.data.results;\n}\n"],"names":["MovieItem","styled","NavLink","p","theme","radii","large","shadows","middle","MovieItemImage","MovieItemTitle","space","fontSizes","l","colors","secondaryText","movie","id","original_title","poster_path","location","useLocation","to","state","from","src","alt","size","color","TrendingList","useState","trendingMovies","setTrendingMovies","useEffect","fetchTrendingMovies","movies","console","log","fetch","map","MovieCard","Title","xxl","axios","API_KEY","response","data","results","fetchSearchMovies","query","fetchMovieDetails","movieId","fetchCast","cast","fetchReviews"],"sourceRoot":""}