{"version":3,"file":"static/js/100.c03455ef.chunk.js","mappings":"6SAEAA,EAAAA,GAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,qGACkBF,EAAAA,EAAAA,IAAM,+BAAD,OAAgCC,IADvD,cACCE,EADD,yBAEEA,EAASC,KAAKC,SAFhB,kEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAiCC,GAAjC,wFACkBP,EAAAA,EAAAA,IAAM,yBAAD,OACDC,EADC,kBACgBM,IAFvC,cACCJ,EADD,yBAIEA,EAASC,KAAKC,SAJhB,kEAOA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAAiCC,GAAjC,wFACkBT,EAAAA,EAAAA,IAAM,UAAD,OAAWS,EAAX,oBAA8BR,IADrD,cACCE,EADD,yBAEEA,EAASC,MAFX,kEAKA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAAyBD,GAAzB,wFACkBT,EAAAA,EAAAA,IAAM,UAAD,OAAWS,EAAX,4BAAsCR,IAD7D,cACCE,EADD,yBAEEA,EAASC,KAAKO,MAFhB,kEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA4BH,GAA5B,wFACkBT,EAAAA,EAAAA,IAAM,UAAD,OAAWS,EAAX,4BAAsCR,IAD7D,cACCE,EADD,yBAEEA,EAASC,KAAKC,SAFhB,kE,wJC0BP,EAhDa,WACX,IAAQI,GAAYI,EAAAA,EAAAA,MAAZJ,QACR,GAAwBK,EAAAA,EAAAA,UAAS,MAAjC,eAAOH,EAAP,KAAaI,EAAb,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAE4BN,EAAAA,EAAAA,GAAUD,GAFtC,OAEUQ,EAFV,OAGIF,EAAQE,GAHZ,gDAKIC,QAAQC,IAAR,MALJ,0DADc,uBAAC,WAAD,wBASdC,EACD,GAAE,CAACX,IAECE,EAGe,IAAhBA,EAAKU,QAEL,gGAMA,8BACGV,EAAKW,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,cAAeC,EAAtB,EAAsBA,UAAWC,EAAjC,EAAiCA,aAAjC,OACR,2BACGA,GACC,gBACEC,IAAG,6CAAwCD,GAC3CE,IAAKJ,KAGP,SAAC,MAAD,CAAaK,KAAM,IAAKC,MAAM,aAGhC,yBAAMN,KACN,yCAAiBC,OAXTF,EADF,MAXP,IA6BV,C","sources":["Services1/fetchMovies.js","components/Cast/Cast.js"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '76ca17943e227c67de15be6c6d3599fa';\n\nexport async function fetchTrendingMovies() {\n  const response = await axios(`/trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results;\n}\n\nexport async function fetchSearchMovies(query) {\n  const response = await axios(\n    `/search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  return response.data.results;\n}\n\nexport async function fetchMovieDetails(movieId) {\n  const response = await axios(`/movie/${movieId}?api_key=${API_KEY}`);\n  return response.data;\n}\n\nexport async function fetchCast(movieId) {\n  const response = await axios(`/movie/${movieId}/credits?api_key=${API_KEY}`);\n  return response.data.cast;\n}\n\nexport async function fetchReviews(movieId) {\n  const response = await axios(`/movie/${movieId}/reviews?api_key=${API_KEY}`);\n  return response.data.results;\n}\n","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchCast } from '../../Services1/fetchMovies';\nimport { IoIosPerson } from 'react-icons/io';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState(null);\n\n  useEffect(() => {\n    async function fetch() {\n      try {\n        const movieCast = await fetchCast(movieId);\n        setCast(movieCast);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    fetch();\n  }, [movieId]);\n\n  if (!cast) {\n    return null;\n  }\n  if (cast.length === 0) {\n    return (\n      <div>\n        Sorry, but we have no information about the actors of this movie.\n      </div>\n    );\n  } else {\n    return (\n      <>\n        {cast.map(({ id, original_name, character, profile_path }) => (\n          <div key={id}>\n            {profile_path ? (\n              <img\n                src={`https://www.themoviedb.org/t/p/w200${profile_path}`}\n                alt={original_name}\n              />\n            ) : (\n              <IoIosPerson size={200} color=\"#6b6969\" />\n            )}\n\n            <div>{original_name}</div>\n            <div>Character: {character}</div>\n          </div>\n        ))}\n      </>\n    );\n  }\n};\n\nexport default Cast;\n"],"names":["axios","API_KEY","fetchTrendingMovies","response","data","results","fetchSearchMovies","query","fetchMovieDetails","movieId","fetchCast","cast","fetchReviews","useParams","useState","setCast","useEffect","movieCast","console","log","fetch","length","map","id","original_name","character","profile_path","src","alt","size","color"],"sourceRoot":""}