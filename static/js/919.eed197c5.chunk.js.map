{"version":3,"file":"static/js/919.eed197c5.chunk.js","mappings":"4SAEAA,EAAAA,GAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,qGACkBF,EAAAA,EAAAA,IAAM,+BAAD,OAAgCC,IADvD,cACCE,EADD,yBAEEA,EAASC,KAAKC,SAFhB,kEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAiCC,GAAjC,wFACkBP,EAAAA,EAAAA,IAAM,yBAAD,OACDC,EADC,kBACgBM,IAFvC,cACCJ,EADD,yBAIEA,EAASC,KAAKC,SAJhB,kEAOA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAAiCC,GAAjC,wFACkBT,EAAAA,EAAAA,IAAM,UAAD,OAAWS,EAAX,oBAA8BR,IADrD,cACCE,EADD,yBAEEA,EAASC,MAFX,kEAKA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAAyBD,GAAzB,wFACkBT,EAAAA,EAAAA,IAAM,UAAD,OAAWS,EAAX,4BAAsCR,IAD7D,cACCE,EADD,yBAEEA,EAASC,KAAKO,MAFhB,kEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA4BH,GAA5B,wFACkBT,EAAAA,EAAAA,IAAM,UAAD,OAAWS,EAAX,4BAAsCR,IAD7D,cACCE,EADD,yBAEEA,EAASC,KAAKC,SAFhB,kE,8ICaP,EApCgB,WACd,IAAQI,GAAYI,EAAAA,EAAAA,MAAZJ,QACR,GAA8BK,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAE+BL,EAAAA,EAAAA,IAAaH,GAF5C,OAEUS,EAFV,OAGIF,EAAWE,GAHf,gDAKIC,QAAQC,IAAR,MALJ,0DADc,uBAAC,WAAD,wBASdC,EACD,GAAE,CAACZ,IAECM,EAIkB,IAAnBA,EAAQO,QACH,wEAGL,wBACGP,EAAQQ,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAAX,OACX,2BACE,sCAAcD,MACd,yBAAMC,MAFCD,EADE,MARV,IAiBV,C","sources":["Services/fetchMovies.js","components/Reviews/Reviews.js"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '76ca17943e227c67de15be6c6d3599fa';\n\nexport async function fetchTrendingMovies() {\n  const response = await axios(`/trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results;\n}\n\nexport async function fetchSearchMovies(query) {\n  const response = await axios(\n    `/search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  return response.data.results;\n}\n\nexport async function fetchMovieDetails(movieId) {\n  const response = await axios(`/movie/${movieId}?api_key=${API_KEY}`);\n  return response.data;\n}\n\nexport async function fetchCast(movieId) {\n  const response = await axios(`/movie/${movieId}/credits?api_key=${API_KEY}`);\n  return response.data.cast;\n}\n\nexport async function fetchReviews(movieId) {\n  const response = await axios(`/movie/${movieId}/reviews?api_key=${API_KEY}`);\n  return response.data.results;\n}\n","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchReviews } from '../../Services/fetchMovies';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState(null);\n\n  useEffect(() => {\n    async function fetch() {\n      try {\n        const movieReviews = await fetchReviews(movieId);\n        setReviews(movieReviews);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    fetch();\n  }, [movieId]);\n\n  if (!reviews) {\n    return null;\n  }\n\n  if (reviews.length === 0) {\n    return <div>We don`t have any reviews for this movie.</div>;\n  } else {\n    return (\n      <ul>\n        {reviews.map(({ author, content }) => (\n          <li key={author}>\n            <div>Author: {author}</div>\n            <div>{content}</div>\n          </li>\n        ))}\n      </ul>\n    );\n  }\n};\n\nexport default Reviews;\n"],"names":["axios","API_KEY","fetchTrendingMovies","response","data","results","fetchSearchMovies","query","fetchMovieDetails","movieId","fetchCast","cast","fetchReviews","useParams","useState","reviews","setReviews","useEffect","movieReviews","console","log","fetch","length","map","author","content"],"sourceRoot":""}