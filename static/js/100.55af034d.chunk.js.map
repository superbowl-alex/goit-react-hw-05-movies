{"version":3,"file":"static/js/100.55af034d.chunk.js","mappings":"yRA0DA,EApDa,WACX,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,WAAS,GAAnC,eAAOG,EAAP,KAAcC,EAAd,KAeA,OAbAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAE4BC,EAAAA,EAAAA,GAAUR,GAFtC,OAEUS,EAFV,OAGIL,EAAQK,GAHZ,gDAKIH,GAAS,GACTI,QAAQC,IAAR,MANJ,0DADc,uBAAC,WAAD,wBAUdC,EACD,GAAE,CAACZ,IAECG,EAGe,IAAhBA,EAAKU,QAEL,gGAMA,gCACGR,IAAS,SAACS,EAAA,EAAD,IACTX,EAAKY,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,cAAeC,EAAtB,EAAsBA,UAAWC,EAAjC,EAAiCA,aAAjC,OACR,2BACGA,GACC,gBACEC,IAAG,6CAAwCD,GAC3CE,IAAKJ,EACLK,QAAQ,UAGV,SAAC,MAAD,CAAaC,KAAM,IAAKC,MAAM,aAGhC,yBAAMP,KACN,yCAAiBC,OAZTF,EADF,OAZP,IA+BV,C,8ECtDYS,E,OAAcC,EAAAA,IAAH,gGACT,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,UAAUC,GAAtB,IACL,SAAAH,GAAC,OAAIA,EAAEC,MAAMG,OAAOC,gBAAnB,IACC,SAAAL,GAAC,OAAIA,EAAEC,MAAMK,MAAM,EAAlB,I,SCId,EANqB,WACnB,OACE,SAACR,EAAD,2DAEH,C,kMCLDS,EAAAA,GAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,qGACkBF,EAAAA,EAAAA,IAAM,+BAAD,OAAgCC,IADvD,cACCE,EADD,yBAEEA,EAASC,KAAKC,SAFhB,kEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAiCC,GAAjC,wFACkBP,EAAAA,EAAAA,IAAM,yBAAD,OACDC,EADC,kBACgBM,IAFvC,cACCJ,EADD,yBAIEA,EAASC,KAAKC,SAJhB,kEAOA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAAiC1C,GAAjC,wFACkBkC,EAAAA,EAAAA,IAAM,UAAD,OAAWlC,EAAX,oBAA8BmC,IADrD,cACCE,EADD,yBAEEA,EAASC,MAFX,kEAKA,SAAe9B,EAAtB,+CAAO,OAAP,oBAAO,WAAyBR,GAAzB,wFACkBkC,EAAAA,EAAAA,IAAM,UAAD,OAAWlC,EAAX,4BAAsCmC,IAD7D,cACCE,EADD,yBAEEA,EAASC,KAAKnC,MAFhB,kEAKA,SAAewC,EAAtB,+CAAO,OAAP,oBAAO,WAA4B3C,GAA5B,wFACkBkC,EAAAA,EAAAA,IAAM,UAAD,OAAWlC,EAAX,4BAAsCmC,IAD7D,cACCE,EADD,yBAEEA,EAASC,KAAKC,SAFhB,kE","sources":["components/Cast/Cast.js","components/ErrorMessage/ErrorMessage.styled.js","components/ErrorMessage/ErrorMessage.js","services/fetchMovies.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchCast } from '../../services/fetchMovies';\nimport { IoIosPerson } from 'react-icons/io';\nimport ErrorMessage from 'components/ErrorMessage';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState(null);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    async function fetch() {\n      try {\n        const movieCast = await fetchCast(movieId);\n        setCast(movieCast);\n      } catch (error) {\n        setError(true);\n        console.log(error);\n      }\n    }\n    fetch();\n  }, [movieId]);\n\n  if (!cast) {\n    return null;\n  }\n  if (cast.length === 0) {\n    return (\n      <div>\n        Sorry, but we have no information about the actors of this movie.\n      </div>\n    );\n  } else {\n    return (\n      <>\n        {error && <ErrorMessage />}\n        {cast.map(({ id, original_name, character, profile_path }) => (\n          <div key={id}>\n            {profile_path ? (\n              <img\n                src={`https://www.themoviedb.org/t/p/w200${profile_path}`}\n                alt={original_name}\n                loading=\"lazy\"\n              />\n            ) : (\n              <IoIosPerson size={200} color=\"#6b6969\" />\n            )}\n\n            <div>{original_name}</div>\n            <div>Character: {character}</div>\n          </div>\n        ))}\n      </>\n    );\n  }\n};\n\nexport default Cast;\n","import styled from '@emotion/styled';\n\nexport const ErrorAllert = styled.div`\n  font-size: ${p => p.theme.fontSizes.xxl};\n  color: ${p => p.theme.colors.buttonHoverColor};\n  padding: ${p => p.theme.space[4]}px;\n  margin: 0 auto;\n`;\n","import React from 'react';\nimport { ErrorAllert } from './ErrorMessage.styled';\n\nconst ErrorMessage = () => {\n  return (\n    <ErrorAllert>Something went wrong. Please, try again later</ErrorAllert>\n  );\n};\n\nexport default ErrorMessage;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '76ca17943e227c67de15be6c6d3599fa';\n\nexport async function fetchTrendingMovies() {\n  const response = await axios(`/trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results;\n}\n\nexport async function fetchSearchMovies(query) {\n  const response = await axios(\n    `/search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  return response.data.results;\n}\n\nexport async function fetchMovieDetails(movieId) {\n  const response = await axios(`/movie/${movieId}?api_key=${API_KEY}`);\n  return response.data;\n}\n\nexport async function fetchCast(movieId) {\n  const response = await axios(`/movie/${movieId}/credits?api_key=${API_KEY}`);\n  return response.data.cast;\n}\n\nexport async function fetchReviews(movieId) {\n  const response = await axios(`/movie/${movieId}/reviews?api_key=${API_KEY}`);\n  return response.data.results;\n}\n"],"names":["movieId","useParams","useState","cast","setCast","error","setError","useEffect","fetchCast","movieCast","console","log","fetch","length","ErrorMessage","map","id","original_name","character","profile_path","src","alt","loading","size","color","ErrorAllert","styled","p","theme","fontSizes","xxl","colors","buttonHoverColor","space","axios","API_KEY","fetchTrendingMovies","response","data","results","fetchSearchMovies","query","fetchMovieDetails","fetchReviews"],"sourceRoot":""}