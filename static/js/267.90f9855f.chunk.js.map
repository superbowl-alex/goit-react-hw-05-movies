{"version":3,"file":"static/js/267.90f9855f.chunk.js","mappings":"uQAoBA,EApByB,SAAC,GAEnB,IAAD,IADJA,MAASC,EACL,EADKA,eAAgBC,EACrB,EADqBA,SAAUC,EAC/B,EAD+BA,aAAcC,EAC7C,EAD6CA,OAAQC,EACrD,EADqDA,aAEnDC,EAAS,UAAMC,KAAKC,MAAqB,GAAfL,GAAjB,MACTM,EAAe,IAAIC,KAAKL,GAAcM,cAE5C,OACE,iCACE,2BACGV,EADH,KACqBQ,EADrB,QAGA,0CAAkBH,MAClB,uCACA,yBAAMJ,KACN,qCACA,yBAAME,EAAOQ,KAAI,qBAAGC,IAAH,IAAoBC,KAAK,SAG/C,E,SCDD,EAfmB,SAAC,GAAgD,IAAD,IAA7Cd,MAASC,EAAoC,EAApCA,eAAgBc,EAAoB,EAApBA,YAC7C,OACE,8BACGA,GACC,gBACEC,IAAG,6CAAwCD,GAC3CE,IAAKhB,KAGP,SAAC,MAAD,CAASiB,KAAM,IAAKC,MAAM,aAIjC,ECOD,EAnBuB,SAAC,GAAsB,EAApBnB,MAASoB,GACjC,OACE,iCACE,oDACA,2BACE,yBACE,SAAC,KAAD,CAASC,GAAG,OAAZ,qBAEF,yBACE,SAAC,KAAD,CAASA,GAAG,UAAZ,2BAGJ,SAAC,EAAAC,SAAD,CAAUC,UAAU,gDAApB,UACE,SAAC,KAAD,MACU,MAGjB,ECmBD,EAhCqB,WAAO,IAAD,IACjBC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,MAAnC,eAAO1B,EAAP,KAAc2B,EAAd,KAEMC,EAAY,qBADDC,EAAAA,EAAAA,MACaC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAc7C,OAZAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAEuBC,EAAAA,EAAAA,IAAkBT,GAFzC,OAEUU,EAFV,OAGIP,EAASO,GAHb,gDAKIC,QAAQC,IAAR,MALJ,0DADc,uBAAC,WAAD,wBASdC,EACD,GAAE,CAACb,IAECxB,GAKH,6BACE,SAAC,KAAD,CAAMqB,GAAIO,EAAV,sBACA,SAAC,EAAD,CAAY5B,MAAOA,KACnB,SAAC,EAAD,CAAkBA,MAAOA,KACzB,SAAC,EAAD,CAAgBA,MAAOA,EAAO8B,MAAO,CAAEC,KAAMH,QARxC,IAWV,C,4LCnCDU,EAAAA,GAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,qGACkBF,EAAAA,EAAAA,IAAM,+BAAD,OAAgCC,IADvD,cACCE,EADD,yBAEEA,EAASC,KAAKC,SAFhB,kEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAiCC,GAAjC,wFACkBP,EAAAA,EAAAA,IAAM,yBAAD,OACDC,EADC,kBACgBM,IAFvC,cACCJ,EADD,yBAIEA,EAASC,KAAKC,SAJhB,kEAOA,SAAeV,EAAtB,+CAAO,OAAP,oBAAO,WAAiCT,GAAjC,wFACkBc,EAAAA,EAAAA,IAAM,UAAD,OAAWd,EAAX,oBAA8Be,IADrD,cACCE,EADD,yBAEEA,EAASC,MAFX,kEAKA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAAyBtB,GAAzB,wFACkBc,EAAAA,EAAAA,IAAM,UAAD,OAAWd,EAAX,4BAAsCe,IAD7D,cACCE,EADD,yBAEEA,EAASC,KAAKK,MAFhB,kEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA4BxB,GAA5B,wFACkBc,EAAAA,EAAAA,IAAM,UAAD,OAAWd,EAAX,4BAAsCe,IAD7D,cACCE,EADD,yBAEEA,EAASC,KAAKC,SAFhB,kE","sources":["components/MovieDescription/MovieDescription.js","components/MovieImage/MovieImage.js","components/AdditionInform/AdditionInform.js","Pages/MovieDetails/MovieDetails.js","Services/fetchMovies.js"],"sourcesContent":["const MovieDescription = ({\n  movie: { original_title, overview, vote_average, genres, release_date },\n}) => {\n  const userScore = `${Math.round(vote_average * 10)} %`;\n  const movieRelease = new Date(release_date).getFullYear();\n\n  return (\n    <>\n      <div>\n        {original_title} ({movieRelease})\n      </div>\n      <div>User score: {userScore}</div>\n      <div>Overview</div>\n      <div>{overview}</div>\n      <div>Genres</div>\n      <div>{genres.map(({ name }) => name).join(' ')}</div>\n    </>\n  );\n};\n\nexport default MovieDescription;\n","import { BsImage } from 'react-icons/bs';\n\nconst MovieImage = ({ movie: { original_title, poster_path } }) => {\n  return (\n    <>\n      {poster_path ? (\n        <img\n          src={`https://www.themoviedb.org/t/p/w300${poster_path}`}\n          alt={original_title}\n        />\n      ) : (\n        <BsImage size={200} color=\"#6b6969\" />\n      )}\n    </>\n  );\n};\n\nexport default MovieImage;\n","import { NavLink, Outlet } from 'react-router-dom';\nimport { Suspense } from 'react';\n\nconst AdditionInform = ({ movie: { id } }) => {\n  return (\n    <>\n      <h3>Additional information</h3>\n      <ul>\n        <li>\n          <NavLink to=\"cast\">Cast</NavLink>\n        </li>\n        <li>\n          <NavLink to=\"reviews\">Reviews</NavLink>\n        </li>\n      </ul>\n      <Suspense fallback={<div>Loading subpage...</div>}>\n        <Outlet />\n      </Suspense>{' '}\n    </>\n  );\n};\n\nexport default AdditionInform;\n","import React, { useState, useEffect } from 'react';\nimport { useParams, useLocation, Link } from 'react-router-dom';\nimport { fetchMovieDetails } from '../../Services/fetchMovies';\nimport MovieDescription from '../../components/MovieDescription';\nimport MovieImage from '../../components/MovieImage';\nimport AdditionInform from '../../components/AdditionInform';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n\n  useEffect(() => {\n    async function fetch() {\n      try {\n        const film = await fetchMovieDetails(movieId);\n        setMovie(film);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    fetch();\n  }, [movieId]);\n\n  if (!movie) {\n    return null;\n  }\n\n  return (\n    <main>\n      <Link to={backLinkHref}>Go back</Link>\n      <MovieImage movie={movie} />\n      <MovieDescription movie={movie} />\n      <AdditionInform movie={movie} state={{ from: backLinkHref }} />\n    </main>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '76ca17943e227c67de15be6c6d3599fa';\n\nexport async function fetchTrendingMovies() {\n  const response = await axios(`/trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results;\n}\n\nexport async function fetchSearchMovies(query) {\n  const response = await axios(\n    `/search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  return response.data.results;\n}\n\nexport async function fetchMovieDetails(movieId) {\n  const response = await axios(`/movie/${movieId}?api_key=${API_KEY}`);\n  return response.data;\n}\n\nexport async function fetchCast(movieId) {\n  const response = await axios(`/movie/${movieId}/credits?api_key=${API_KEY}`);\n  return response.data.cast;\n}\n\nexport async function fetchReviews(movieId) {\n  const response = await axios(`/movie/${movieId}/reviews?api_key=${API_KEY}`);\n  return response.data.results;\n}\n"],"names":["movie","original_title","overview","vote_average","genres","release_date","userScore","Math","round","movieRelease","Date","getFullYear","map","name","join","poster_path","src","alt","size","color","id","to","Suspense","fallback","movieId","useParams","useState","setMovie","backLinkHref","useLocation","state","from","useEffect","fetchMovieDetails","film","console","log","fetch","axios","API_KEY","fetchTrendingMovies","response","data","results","fetchSearchMovies","query","fetchCast","cast","fetchReviews"],"sourceRoot":""}