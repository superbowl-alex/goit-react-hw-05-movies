{"version":3,"file":"static/js/919.2866d58d.chunk.js","mappings":"8LAEaA,E,OAAcC,EAAAA,IAAH,gGACT,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,UAAUC,GAAtB,IACL,SAAAH,GAAC,OAAIA,EAAEC,MAAMG,OAAOC,gBAAnB,IACC,SAAAL,GAAC,OAAIA,EAAEC,MAAMK,MAAM,EAAlB,I,SCId,EANqB,WACnB,OACE,SAACR,EAAD,2DAEH,C,+JCuCD,EAzCgB,WACd,IAAQS,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA0BF,EAAAA,EAAAA,WAAS,GAAnC,eAAOG,EAAP,KAAcC,EAAd,KAeA,OAbAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAE+BC,EAAAA,EAAAA,IAAaR,GAF5C,OAEUS,EAFV,OAGIL,EAAWK,GAHf,gDAKIH,GAAS,GACTI,QAAQC,IAAR,MANJ,0DADc,uBAAC,WAAD,wBAUdC,EACD,GAAE,CAACZ,IAECG,EAIkB,IAAnBA,EAAQU,QACH,wEAGL,gCACGR,IAAS,SAACS,EAAA,EAAD,KACV,wBACGX,EAAQY,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAAX,OACX,2BACE,sCAAcD,MACd,yBAAMC,MAFCD,EADE,SAVZ,IAoBV,C,kMC1CDE,EAAAA,GAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,qGACkBF,EAAAA,EAAAA,IAAM,+BAAD,OAAgCC,IADvD,cACCE,EADD,yBAEEA,EAASC,KAAKC,SAFhB,kEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAiCC,GAAjC,wFACkBP,EAAAA,EAAAA,IAAM,yBAAD,OACDC,EADC,kBACgBM,IAFvC,cACCJ,EADD,yBAIEA,EAASC,KAAKC,SAJhB,kEAOA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAAiC1B,GAAjC,wFACkBkB,EAAAA,EAAAA,IAAM,UAAD,OAAWlB,EAAX,oBAA8BmB,IADrD,cACCE,EADD,yBAEEA,EAASC,MAFX,kEAKA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAAyB3B,GAAzB,wFACkBkB,EAAAA,EAAAA,IAAM,UAAD,OAAWlB,EAAX,4BAAsCmB,IAD7D,cACCE,EADD,yBAEEA,EAASC,KAAKM,MAFhB,kEAKA,SAAepB,EAAtB,+CAAO,OAAP,oBAAO,WAA4BR,GAA5B,wFACkBkB,EAAAA,EAAAA,IAAM,UAAD,OAAWlB,EAAX,4BAAsCmB,IAD7D,cACCE,EADD,yBAEEA,EAASC,KAAKC,SAFhB,kE","sources":["components/ErrorMessage/ErrorMessage.styled.js","components/ErrorMessage/ErrorMessage.js","components/Reviews/Reviews.js","services/fetchMovies.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const ErrorAllert = styled.div`\n  font-size: ${p => p.theme.fontSizes.xxl};\n  color: ${p => p.theme.colors.buttonHoverColor};\n  padding: ${p => p.theme.space[4]}px;\n  margin: 0 auto;\n`;\n","import React from 'react';\nimport { ErrorAllert } from './ErrorMessage.styled';\n\nconst ErrorMessage = () => {\n  return (\n    <ErrorAllert>Something went wrong. Please, try again later</ErrorAllert>\n  );\n};\n\nexport default ErrorMessage;\n","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchReviews } from '../../services/fetchMovies';\nimport ErrorMessage from 'components/ErrorMessage';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState(null);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    async function fetch() {\n      try {\n        const movieReviews = await fetchReviews(movieId);\n        setReviews(movieReviews);\n      } catch (error) {\n        setError(true);\n        console.log(error);\n      }\n    }\n    fetch();\n  }, [movieId]);\n\n  if (!reviews) {\n    return null;\n  }\n\n  if (reviews.length === 0) {\n    return <div>We don`t have any reviews for this movie.</div>;\n  } else {\n    return (\n      <>\n        {error && <ErrorMessage />}\n        <ul>\n          {reviews.map(({ author, content }) => (\n            <li key={author}>\n              <div>Author: {author}</div>\n              <div>{content}</div>\n            </li>\n          ))}\n        </ul>\n      </>\n    );\n  }\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '76ca17943e227c67de15be6c6d3599fa';\n\nexport async function fetchTrendingMovies() {\n  const response = await axios(`/trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results;\n}\n\nexport async function fetchSearchMovies(query) {\n  const response = await axios(\n    `/search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  return response.data.results;\n}\n\nexport async function fetchMovieDetails(movieId) {\n  const response = await axios(`/movie/${movieId}?api_key=${API_KEY}`);\n  return response.data;\n}\n\nexport async function fetchCast(movieId) {\n  const response = await axios(`/movie/${movieId}/credits?api_key=${API_KEY}`);\n  return response.data.cast;\n}\n\nexport async function fetchReviews(movieId) {\n  const response = await axios(`/movie/${movieId}/reviews?api_key=${API_KEY}`);\n  return response.data.results;\n}\n"],"names":["ErrorAllert","styled","p","theme","fontSizes","xxl","colors","buttonHoverColor","space","movieId","useParams","useState","reviews","setReviews","error","setError","useEffect","fetchReviews","movieReviews","console","log","fetch","length","ErrorMessage","map","author","content","axios","API_KEY","fetchTrendingMovies","response","data","results","fetchSearchMovies","query","fetchMovieDetails","fetchCast","cast"],"sourceRoot":""}