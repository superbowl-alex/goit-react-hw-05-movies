{"version":3,"file":"static/js/4.a67b00ee.chunk.js","mappings":"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","sources":["components/ErrorMessage/ErrorMessage.styled.js","components/ErrorMessage/ErrorMessage.js","components/MovieCard/MovieCard.styled.js","components/MovieCard/MovieCard.js","components/TrendingMoviesList/TrendingMoviesList.styled.js","components/TrendingMoviesList/TrendingMoviesList.js","pages/Home/Home.styled.js","pages/Home/Home.js","services/fetchMovies.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const ErrorAllert = styled.div`\n  font-size: ${p => p.theme.fontSizes.xxl};\n  color: ${p => p.theme.colors.buttonHoverColor};\n  padding: ${p => p.theme.space[4]}px;\n  margin: 0 auto;\n`;\n","import React from 'react';\nimport { ErrorAllert } from './ErrorMessage.styled';\n\nconst ErrorMessage = () => {\n  return (\n    <ErrorAllert>Something went wrong. Please, try again later</ErrorAllert>\n  );\n};\n\nexport default ErrorMessage;\n","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const MovieItem = styled.li`\n  border-radius: ${p => p.theme.radii.large};\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  overflow: hidden;\n  box-shadow: ${p => p.theme.shadows.middle};\n  &:hover {\n    transform: scale(1.02);\n  }\n`;\n\nexport const MovieRef = styled(NavLink)`\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  > svg {\n    width: 100%;\n    object-fit: cover;\n  }\n`;\n\nexport const MovieItemImage = styled.img`\n  width: 100%;\n  object-fit: cover;\n`;\n\nexport const MovieItemTitle = styled.div`\n  padding: ${p => p.theme.space[3]}px;\n  font-size: ${p => p.theme.fontSizes.l};\n  color: ${p => p.theme.colors.secondaryText};\n`;\n","import PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\nimport { BsFileImage } from 'react-icons/bs';\nimport {\n  MovieItem,\n  MovieRef,\n  MovieItemImage,\n  MovieItemTitle,\n} from './MovieCard.styled';\n\nconst MovieCard = ({ movie: { id, original_title, poster_path } }) => {\n  const location = useLocation();\n  const currentLocation = '/movies';\n\n  return (\n    <MovieItem>\n      <MovieRef to={`${currentLocation}/${id}`} state={{ from: location }}>\n        {poster_path ? (\n          <MovieItemImage\n            src={`https://www.themoviedb.org/t/p/w300${poster_path}`}\n            alt={original_title}\n          />\n        ) : (\n          <BsFileImage size={400} color=\"#6b6969\" />\n        )}\n        <MovieItemTitle> {original_title}</MovieItemTitle>\n      </MovieRef>\n    </MovieItem>\n  );\n};\n\nMovieCard.propTypes = {\n  movie: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    original_title: PropTypes.string.isRequired,\n    poster_path: PropTypes.string,\n  }),\n};\n\nexport default MovieCard;\n","import styled from '@emotion/styled';\n\nexport const TrendingList = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n  grid-gap: ${p => p.theme.space[4]}px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\n","import React, { useState, useEffect } from 'react';\nimport { fetchTrendingMovies } from '../../services/fetchMovies';\nimport MovieCard from 'components/MovieCard';\nimport { TrendingList } from './TrendingMoviesList.styled';\nimport ErrorMessage from 'components/ErrorMessage';\n\nconst TrendingMoviesList = () => {\n  const [trendingMovies, setTrendingMovies] = useState([]);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    async function fetch() {\n      try {\n        const movies = await fetchTrendingMovies();\n        setTrendingMovies(movies);\n      } catch (error) {\n        setError(true);\n        console.log(error);\n      }\n    }\n    fetch();\n  }, []);\n\n  if (!trendingMovies) {\n    return null;\n  }\n\n  return (\n    <>\n      {error && <ErrorMessage />}\n      <TrendingList>\n        {trendingMovies.map(movie => (\n          <MovieCard key={movie.id} movie={movie} />\n        ))}\n      </TrendingList>\n    </>\n  );\n};\n\nexport default TrendingMoviesList;\n","import styled from '@emotion/styled';\n\nexport const Title = styled.h1`\n  padding: ${p => p.theme.space[4]}px;\n  color: ${p => p.theme.colors.secondaryText};\n  text-align: center;\n  font-size: ${p => p.theme.fontSizes.xxl};\n`;\n","import React from 'react';\nimport TrendingMoviesList from 'components/TrendingMoviesList';\nimport { Title } from './Home.styled';\n\nconst Home = () => {\n  return (\n    <main>\n      <Title>Trending today</Title>\n      <TrendingMoviesList />\n    </main>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '76ca17943e227c67de15be6c6d3599fa';\n\nexport async function fetchTrendingMovies() {\n  const response = await axios(`/trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results;\n}\n\nexport async function fetchSearchMovies(query) {\n  const response = await axios(\n    `/search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  return response.data.results;\n}\n\nexport async function fetchMovieDetails(movieId) {\n  const response = await axios(`/movie/${movieId}?api_key=${API_KEY}`);\n  return response.data;\n}\n\nexport async function fetchCast(movieId) {\n  const response = await axios(`/movie/${movieId}/credits?api_key=${API_KEY}`);\n  return response.data.cast;\n}\n\nexport async function fetchReviews(movieId) {\n  const response = await axios(`/movie/${movieId}/reviews?api_key=${API_KEY}`);\n  return response.data.results;\n}\n"],"names":["ErrorAllert","styled","p","theme","fontSizes","xxl","colors","buttonHoverColor","space","MovieItem","radii","large","shadows","middle","MovieRef","NavLink","MovieItemImage","MovieItemTitle","l","secondaryText","movie","id","original_title","poster_path","location","useLocation","to","state","from","src","alt","size","color","TrendingList","useState","trendingMovies","setTrendingMovies","error","setError","useEffect","fetchTrendingMovies","movies","console","log","fetch","ErrorMessage","map","MovieCard","Title","axios","API_KEY","response","data","results","fetchSearchMovies","query","fetchMovieDetails","movieId","fetchCast","cast","fetchReviews"],"sourceRoot":""}